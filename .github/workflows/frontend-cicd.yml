name: Frontend CI/CD Pipeline

on:
  push:
    branches: [staging, main]  
    paths: ['src/**', 'package.json', 'vite.config.ts', '.github/workflows/frontend-cicd.yml']
  pull_request:
    branches: [staging, main]  
    paths: ['src/**', 'package.json', 'vite.config.ts']

jobs:
  test:
    name: Run Tests and Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npx tsc --noEmit

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    strategy:
      matrix:
        environment: 
          - ${{ github.ref == 'refs/heads/staging' && 'staging' || '' }}
          - ${{ github.ref == 'refs/heads/main' && 'production' || '' }}
        exclude:
          - environment: ''
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for ${{ matrix.environment }}
      run: npm run build
      env:
        NODE_ENV: ${{ matrix.environment }}
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.environment }}
        path: dist/

  deploy-staging:
    name: Deploy to Staging (Vercel)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging'
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel Staging
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_STAGING }}
        vercel-args: '--env NODE_ENV=staging'

  deploy-production:
    name: Deploy to Production (Vercel)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel Production
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_PROD }}
        vercel-args: '--prod --env NODE_ENV=production'